# In this file you can override any option defined in the reference files.
# Copy in parts of the reference files and modify as you please.
 
akka {
 
  # Loggers to register at boot time (akka.event.Logging$DefaultLogger logs
  # to STDOUT)
  loggers = ["akka.event.slf4j.Slf4jLogger"]
 
  # Log level used by the configured loggers (see "loggers") as soon
  # as they have been started; before that, see "stdout-loglevel"
  # Options: ERROR, WARNING, INFO, DEBUG
  loglevel = DEBUG
  # log-config-on-start = on

  # Log level for the very basic logger activated during AkkaApplication startup
  # Options: ERROR, WARNING, INFO, DEBUG
  stdout-loglevel = DEBUG

  timeout = 500
 
  actor {
    creation-timeout = 180 s
    debug
    {
      autoreceive = on
      lifecycle = on
      fsm = on
      unhandled = on
      receive = on
      event-stream = on
    }
    grpc-dispatcher {
      # Dispatcher is the name of the event-based dispatcher
      type = Dispatcher
      # What kind of ExecutionService to use
      executor = "fork-join-executor"
      # Configuration for the thread pool
      fork-join-executor {
        # Min number of threads to cap factor-based parallelism number to
        parallelism-min = 1
        # Parallelism (threads) ... ceil(available processors * factor)
        parallelism-factor = 1.0
        # Max number of threads to cap factor-based parallelism number to
        parallelism-max = 4
      }
      # Throughput defines the maximum number of messages to be
      # processed per actor before the thread jumps to the next actor.
      # Set to 1 for as fair as possible.
      throughput = 100
    }
    flow-dispatcher {
      # Dispatcher is the name of the event-based dispatcher
      type = Dispatcher
      # What kind of ExecutionService to use
      executor = "fork-join-executor"
      # Configuration for the thread pool
      fork-join-executor {
        # Min number of threads to cap factor-based parallelism number to
        parallelism-min = 2
        # Parallelism (threads) ... ceil(available processors * factor)
        parallelism-factor = 3.0
        # Max number of threads to cap factor-based parallelism number to
        parallelism-max = 30
      }
      # Throughput defines the maximum number of messages to be
      # processed per actor before the thread jumps to the next actor.
      # Set to 1 for as fair as possible.
      throughput = 100
    }
    task-dispatcher {
      type = Dispatcher
      executor = "thread-pool-executor"
      # Configuration for the thread pool
      thread-pool-executor {
        fixed-pool-size = 4
      }
      throughput = 1
    }
  }
}